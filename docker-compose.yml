version: '3.8'

services:
  # MySQL Database
  mysql-db:
    image: mysql:8.0
    container_name: hotel-booking-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: hotel_booking
      MYSQL_USER: hotel_user
      MYSQL_PASSWORD: hotel_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hotel-network
    restart: unless-stopped

  # Hotel Service
  hotel-service:
    build: ./backend/hotel-service
    container_name: hotel-service
    ports:
      - "81:81"
    environment:
      - DB_HOST=mysql-db
      - DB_USER=hotel_user
      - DB_PASSWORD=hotel_pass
      - DB_NAME=hotel_booking
      - DB_PORT=3306
    depends_on:
      - mysql-db
    networks:
      - hotel-network
    restart: unless-stopped

  # Booking Service
  booking-service:
    build: ./backend/booking-service
    container_name: booking-service
    ports:
      - "82:82"
    environment:
      - DB_HOST=mysql-db
      - DB_USER=hotel_user
      - DB_PASSWORD=hotel_pass
      - DB_NAME=hotel_booking
      - DB_PORT=3306
    depends_on:
      - mysql-db
    networks:
      - hotel-network
    restart: unless-stopped

  # User Service
  user-service:
    build: ./backend/user-service
    container_name: user-service
    ports:
      - "83:83"
    environment:
      - DB_HOST=mysql-db
      - DB_USER=hotel_user
      - DB_PASSWORD=hotel_pass
      - DB_NAME=hotel_booking
      - DB_PORT=3306
      - SECRET_KEY=your-secret-key-here
    depends_on:
      - mysql-db
    networks:
      - hotel-network
    restart: unless-stopped

  # Review Service
  review-service:
    build: ./backend/review-service
    container_name: review-service
    ports:
      - "84:84"
    environment:
      - DB_HOST=mysql-db
      - DB_USER=hotel_user
      - DB_PASSWORD=hotel_pass
      - DB_NAME=hotel_booking
      - DB_PORT=3306
    depends_on:
      - mysql-db
    networks:
      - hotel-network
    restart: unless-stopped

  # Payment Service
  payment-service:
    build: ./backend/payment-service
    container_name: payment-service
    ports:
      - "85:85"
    environment:
      - DB_HOST=mysql-db
      - DB_USER=hotel_user
      - DB_PASSWORD=hotel_pass
      - DB_NAME=hotel_booking
      - DB_PORT=3306
    depends_on:
      - mysql-db
    networks:
      - hotel-network
    restart: unless-stopped

  # Admin Dashboard
  admin-dashboard:
    build: ./backend/admin-dashboard
    container_name: admin-dashboard
    ports:
      - "8999:8999"
    environment:
      - DB_HOST=mysql-db
      - DB_USER=hotel_user
      - DB_PASSWORD=hotel_pass
      - DB_NAME=hotel_booking
      - DB_PORT=3306
    depends_on:
      - mysql-db
      - hotel-service
      - booking-service
      - user-service
      - review-service
      - payment-service
    networks:
      - hotel-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build: .
    container_name: hotel-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost
    depends_on:
      - hotel-service
      - booking-service
      - user-service
      - review-service
      - payment-service
    networks:
      - hotel-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  hotel-network:
    driver: bridge